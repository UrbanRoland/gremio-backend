version: "3.9"
services:
  postgres:
    build:
      context: ./src/main/java/com/gremio/postgres/.
    container_name: gremio_postgres
    restart: unless-stopped
    networks:
      - gremio
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: gremio
      POSTGRES_USER: gremio
    volumes:
      - psql_gremio:/var/lib/postgresql/data
      - gremio_psql_logs:/logs/postgres
    command: postgres -c config_file=/etc/postgresql/postgresql.conf

  cache:
    image: "redis"
    container_name: gremio_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

  gremio_backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: gremio_backend
    image: gremio_backend
    restart: unless-stopped
    networks:
      - gremio
    ports:
      - "9000:8080"
    volumes:
      - spring_app_config:/app/config
      - spring_app_logs:/app/logs
    depends_on:
      - postgres
    environment:
      SPRING_REDIS_HOST: cache
      SPRING_REDIS_PORT: 6379
  prometheus:
      image: prom/prometheus
      container_name: prometheus
      restart: unless-stopped
      command:
        - --enable-feature=exemplar-storage
        - --web.enable-remote-write-receiver
        - --config.file=/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: grafana
    image: grafana/grafana
    restart: unless-stopped
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    volumes:
      - ./grafana/tmp:/etc/grafana
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    ports:
      - "3000:3000"
  tempo:
    container_name: tempo
    image: grafana/tempo
    restart: unless-stopped
    command: [ '-config.file=/etc/tempo.yml' ]
    volumes:
      - tempo:/tmp/tempo
      - ./grafana/tempo.yml:/etc/tempo.yml:ro
    ports:
      - "3200:3200"    # tempo
      - "9411:9411"    # zipkin
  loki:
    container_name: loki
    image: grafana/loki
    restart: unless-stopped
    command: [ '-config.file=/etc/loki/local-config.yaml' ]
    ports:
      - "3100:3100"

networks:
  gremio:
    external: true
volumes:
  psql_gremio:
  gremio_psql_logs:
  spring_app_config:
  spring_app_logs:
  tempo:
    driver: local